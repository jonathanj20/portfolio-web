---
interface Option{
    name: string,
    href: string
}

const options: Option[] = [                           
    {
        name: "inicio",
        href: "#"
    },
    {
        name: "Habilidades",
        href: "#skills",
    },
    {
        name: "Proyectos",
        href: "#projects",
    },
    {
        name: "Contacto",
        href: "#contact",
    }
];
---

<header class="fixed top-0 left-0 w-screen z-10 mx-auto block bg-white">
    <div class=`p-4 lg:hidden`>
        <button class="cursor-pointer rounded-md border-[3px] p-2 w-11 h-11 flex items-center justify-center flex-col gap-y-0.5" id="btnMenu">
             <div class="p-0.5 w-[100%] bg-black transition-all duration-300" id="first-line"></div>
             <div class="p-0.5 w-[100%] bg-black transition-all duration-300" id="second-line"></div>
             <div class="p-0.5 w-[100%] bg-black transition-all duration-300" id="third-line"></div>
        </button>
    </div>
    <nav class={`hidden border-2 text-center lg:block lg:border-0 bg-[#ae9bef] lg:bg-transparent`} id="nav">
        {
            options.map(option => <a href={option.href} class="block p-3 lg:inline-block">{option.name}</a>)
        }
    </nav>
</header>

<script>
    const btnMenu = document.getElementById("btnMenu") as HTMLElement;
    const nav = document.getElementById("nav") as HTMLElement;
    
    btnMenu.addEventListener("click", (): void => {
        nav.classList.toggle("hidden");
        animateLines();
    });

    const animateLines = (): void => {
        const firstLine = document.getElementById("first-line") as HTMLElement;
        const secondLine = document.getElementById("second-line") as HTMLElement;
        const thirdLine = document.getElementById("third-line") as HTMLElement;

        firstLine.classList.toggle("rotate-45");
        secondLine.classList.toggle("hidden");
        thirdLine.classList.toggle("rotate-[-0.12turn]");
        thirdLine.classList.toggle("relative");
        thirdLine.classList.toggle("bottom-1.5");
    }
</script>